<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<!--  <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/fhd" />  -->

	

    <bean id="dataSourceTwo" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:mysql://192.168.0.3/ermis_develop_4_5?useUnicode=true&amp;characterEncoding=UTF8</value>
        </property>
        <property name="username">
            <value>root</value>
        </property>
        <property name="password">
            <value>fhd03admin</value>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref local="dataSourceTwo" />
        </property>
    </bean>
  
    
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:jbpm.repository.hbm.xml</value>
				<value>classpath*:jbpm.execution.hbm.xml</value>
				<value>classpath*:jbpm.history.hbm.xml</value>
				<value>classpath*:jbpm.task.hbm.xml</value>
				<value>classpath*:jbpm.identity.hbm.xml</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<!-- 实体包  -->
				<value>com.fhd.entity.*</value>
				<value>com.fhd.chf.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
 				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<list>
						<bean class="com.fhd.fdc.commons.orm.hibernate.AuditListener" />
						<bean class="org.hibernate.event.def.DefaultMergeEventListener" />
					</list>
				</entry>
			</map>
		</property>
	</bean>
	

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource"><ref bean="dataSource"/></property>
	</bean>

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<context:annotation-config />

	<!-- 数据层包 -->
	<context:component-scan base-package="com.fhd.dao.*" />
	<context:component-scan base-package="com.fhd.chf.dao.*" />
	
	<context:component-scan base-package="com.fhd.fdc.business" />
	
	<!-- 系统管理 -->
	<context:component-scan base-package="com.fhd.sys.business" />
	<!-- 战略管理 -->
	<context:component-scan base-package="com.fhd.sm.business" />
	<!-- 战略管理webservice -->
	<context:component-scan base-package="com.fhd.sm.ws" />
	<!-- 风险评估 -->
	<context:component-scan base-package="com.fhd.ra.business" />
	<!-- 公用 -->
	<context:component-scan base-package="com.fhd.comm.business" />
	<!-- 内控 -->
	<context:component-scan base-package="com.fhd.icm.business" />
	<!-- 考核 -->
	<context:component-scan base-package="com.fhd.check.business" />
	<context:component-scan base-package="com.fhd.process.business" />
	
	
	<!--切面日志拦截-->
    <aop:aspectj-autoproxy/>
	<bean id="logAroundInterceptor" class="com.fhd.fdc.commons.interceptor.LogAroundInterceptor"/>
    
	<!-- 以静态变量保存ApplicationContext -->
	<bean class="com.fhd.core.utils.SpringContextHolder" lazy-init="false" />
	
	
	
	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />
	
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			  <!-- 基本属性 url、user、password -->
	      	  <property name="url" value="${jdbc.url}" />
		      <property name="username" value="${jdbc.username}" />
		      <property name="password" value="${jdbc.password}" />
		
		      <!-- 配置初始化大小、最小、最大 -->
		      <property name="initialSize" value="1" />
		      <property name="minIdle" value="1" /> 
		      <property name="maxActive" value="20" />
		
		      <!-- 配置获取连接等待超时的时间 -->
		      <property name="maxWait" value="60000" />
		
		      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		      <property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		      <property name="minEvictableIdleTimeMillis" value="300000" />
		
		      <property name="validationQuery" value="SELECT 'x'" />
		      <property name="testWhileIdle" value="true" />
		      <property name="testOnBorrow" value="false" />
		      <property name="testOnReturn" value="false" />
		
		      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		      <property name="poolPreparedStatements" value="false" />
		      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		      <!-- 配置监控统计拦截的filters -->
		      <property name="filters" value="stat" />
		</bean>
	</beans>

	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />	

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			  <!-- 基本属性 url、user、password -->
	      	  <property name="url" value="${jdbc.url}" />
		      <property name="username" value="${jdbc.username}" />
		      <property name="password" value="${jdbc.password}" />
		
		      <!-- 配置初始化大小、最小、最大 -->
		      <property name="initialSize" value="1" />
		      <property name="minIdle" value="1" /> 
		      <property name="maxActive" value="20" />
		
		      <!-- 配置获取连接等待超时的时间 -->
		      <property name="maxWait" value="60000" />
		
		      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		      <property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		      <property name="minEvictableIdleTimeMillis" value="300000" />
		
		      <property name="validationQuery" value="SELECT 'x'" />
		      <property name="testWhileIdle" value="true" />
		      <property name="testOnBorrow" value="false" />
		      <property name="testOnReturn" value="false" />
		
		      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		      <property name="poolPreparedStatements" value="false" />
		      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		      <!-- 配置监控统计拦截的filters -->
		      <property name="filters" value="stat" />
		</bean>

	</beans>
	
	
</beans>